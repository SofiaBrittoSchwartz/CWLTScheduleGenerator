import java.io.File;
import java.io.FileNotFoundException;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.Scanner;


public class Master {
	protected HashMap<Shift, ArrayList<Tutor>> availabilityMap; //Maps a shift to a list of tutors available during that time
//	private HashMap<Tutor, ArrayList<Shift>> assignmentMap; //Maps a tutor to a list of Shifts assigned to that tutor.
	protected ArrayList<Tutor> tutors; //Master list of all tutors
	protected ArrayList<Shift> shifts; //Master list of all shifts
	
	public Master(){
		shifts = new ArrayList<Shift>();
		tutors = new ArrayList<Tutor>();
		availabilityMap = new HashMap<Shift, ArrayList<Tutor>>();
//		assignmentMap = new HashMap<Tutor, ArrayList<Shift>>();
		generateShifts();
	}

	private void generateShifts() {
		for(Day day : Day.values()){ //for each day in the week
			for(int i = day.getFirstAppointment(); i < day.getLastAppointment(); i++){ //for each shift in the day
				Shift shift = new Shift(day, i); //create the shift
				shifts.add(shift); //add it to the list of shifts
			}
		}
	}
	
	private void blackOutShift(Day day, int time){
		Shift toRemove = null;
		for(Shift shift : shifts){
			if(shift.day == day && shift.time == time){
				toRemove = shift;
				break;
			}
			else if(shift.day.compareTo(day)>0){ //if we get past the day of the shift we're trying to remove, we know it doesn't exist and we can break
				break;
			}
		}
		shifts.remove(toRemove);
	}
	
	public void read() throws FileNotFoundException{
		String fileName = "Fall2018Availability.csv";
		Scanner sc = new Scanner(new File(fileName));
		sc.useDelimiter(","); //using csv format
		sc.next(); //ignore the id cell
		while(sc.hasNextLine()){
			String line = sc.nextLine();
			print(line);
			if(line.isEmpty()){
				continue;
			}
			String[] tokens = line.split(","); 
			for(int i = 0; i < tokens.length; i++){
				print(tokens[i]);
			}
		}
		
	}
	
	public void print(String x){
		System.out.println(x);;
	}
	
	public static void main(String[] args) throws FileNotFoundException{
		Master m = new Master();
		for(Shift shift : m.shifts){
			System.out.println(shift);
		}
//		m.blackOutShift(Day.Monday, 12);
		m.read();
	}
}
